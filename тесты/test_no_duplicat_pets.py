импортировать  pytest
из  селена . вебдрайвер . поддержка . Пользовательский интерфейс  импорта  WebDriverWait
из  селена . вебдрайвер . поддержка  импорта  ожидаемых_условий  как  EC
из  селена . вебдрайвер . общий . по  импорту  по

защита  test_no_duplicate_pets ( go_to_my_pets ):
    '''Поверяем, что на странице со множеством питомцев нет повторяющихся питомцев'''

    # Устанавливаем явное ожидание
    element  =  WebDriverWait ( pytest . драйвер , 10 ). пока (
        ЕС . присутствия_of_element_located (( By . CSS_SELECTOR , ".table.table-hover tbody tr" )))

    # Сохраняем в переменную pet_data элементы с данными о питомцах
    pet_data  =  pytest . водитель . find_elements_by_css_selector ( '.table.table-hover tbody tr' )

    # Перебираем данные из pet_data, оставляем имя, возраст, и порождаем остальное меняем на пустую строку
    # и разделяем через пробел.
    list_data  = []
    для  i  в  диапазоне ( len ( pet_data )):
        data_pet  =  pet_data [ i ]. текст . заменить ( ' \n ' , '' ). заменить ( '×' , '' )
        split_data_pet  =  data_pet . разделить ( '' )
        список_данные . добавить ( split_data_pet )

    # Склеиваем имя, возраст и породу, получившиеся склееные слова вставки в статью
    # и между ними вставляется пробел
    строка  =  ''
    для  я  в  list_data :
        строка  +=  '' . присоединиться ( я )
        строка  +=  ''

    # Получаем список из строки строки
    строка_списка  =  строка . разделить ( '' )

    # Превращаем список во множество
    set_list_line  =  набор ( list_line )

    # Находим количество элементов списка и получаем
    а  =  длина ( строка_списка )
    b  =  длина ( set_list_line )

    # Из количества элементов списка высчитывается количество элементов
    результат  =  а  -  б

    # Если количество элементов == 0, значит карточки с полученными данными
    утвердить  результат  ==  0
